[tool.poetry]
authors = ["Jan Gosmann <jan@hyper-world.de>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Framework :: AsyncIO",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Communications :: Email",
  "Topic :: System :: Monitoring",
]
description = "Export Prometheus metrics from DMARC reports."
keywords = ["DMARC", "DKIM", "SPF", "Prometheus"]
license = "MIT"
name = "dmarc-metrics-exporter"
readme = "README.rst"
repository = "https://github.com/jgosmann/dmarc-metrics-exporter/"
version = "1.0.0rc1" # Update also in __init__.py!

[tool.poetry.scripts]
dmarc-metrics-exporter = "dmarc_metrics_exporter.__main__:run"

[tool.poetry.dependencies]
bite-parser = "^0.2.4"
dataclasses-serialization = "^1.3.1"
prometheus_client = "^0.19.0"
python = "^3.8"
structlog = ">=24.1.0"
uvicorn = {extras = ["standard"], version = "^0.25.0"}
xsdata = ">=23.7"

[tool.poetry.dev-dependencies]
aiohttp = "^3.7.3"
black = "^23.7.0"
isort = "^5.11.4"
mypy = "^1.4.1"
pylint = "^3.0.3"
pytest = "^7.2.0"
pytest-asyncio = "^0.23.3"
pytest-cov = "^4.0.0"
requests = "^2.26.0"
types-requests = "^2.25.11"

[tool.black]
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
| /dmarc_metrics_exporter/model/(__init__|dmarc_aggregate_report).py
'''

[tool.isort]
force_grid_wrap = 0
include_trailing_comma = true
line_length = 88
multi_line_output = 3
skip = [
  '.bzr',
  '.direnv',
  '.eggs',
  '.git',
  '.hg',
  '.mypy_cache',
  '.nox',
  '.pants.d',
  '.svn',
  '.tox',
  '.venv',
  '_build',
  'buck-out',
  'build',
  'dist',
  'node_modules',
  'venv',
  'dmarc_metrics_exporter/model/__init__.py',
  'dmarc_metrics_exporter/model/dmarc_aggregate_report.py',
]
use_parentheses = true

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]
